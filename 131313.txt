<!doctype html>
<html>
<!--  
get xxd_tochr.pl out
use wit' das tool
use xxd_tobin.pl
to generate your awesome bin.dat t'at you'll
  rename to bincharname.d2s
TODO;START wit'basic toon
-->
<head>
<script>
var l=''; //loaded
var d=document;
function go(_s){
return d.getElementById(_s);
}
function btn_load(){
l=go('ar1').value;
}
function btn_rayload(){
 go('ar2').value=l;
}
function btn_makefree(){
l+='63636363';
}
function btn_makeitrain(){
l+='6465666768696a6b6c6d6e6f70';
}
function btn_loadrename(){
l ='4445464747' + l;
}
function btn_chksum(){
var n=0;
var len=l.length;
if(len%2!==0){
alert('error2');return;
}
var i=0;var byte;
do{
  byte = getbyte(l,i++);alert(byte);break;
}while(byte >= 0 && byte <=255);

//while
//l ='4445464747' + l;
}
function getbyte(_s,_n){
var i=_n*2;
var i2 =2+i;
var s=_s.substring(i,i2);
var n = digit_to_number(s.substring(1,2));
var n2 = digit_to_number(s.substring(0,1))<<4;
return n + n2;
}
function digit_to_number(_s){
if(_s === '0')return 0;
if(_s === '1')return 1;
if(_s === '2')return 2;
if(_s === '3')return 3;
if(_s === '4')return 4;
if(_s === '5')return 5;
if(_s === '6')return 6;
if(_s === '7')return 7;
if(_s === '8')return 8;
if(_s === '9')return 9;
if(_s === 'a')return 10;
if(_s === 'b')return 11;
if(_s === 'c')return 12;
if(_s === 'd')return 13;
if(_s === 'e')return 14;
if(_s === 'f')return 15;
return 0;
}
</script></head>
<body>
<textarea style="width:80%" rows="3" id="ar1"></textarea><br>
<button onclick="btn_load()">LOAD</button><br>
<button onclick="btn_makefree()">MAKEFREE</button><br>
<button onclick="btn_makeitrain()">MAKEITRAIN</button><br>
<button onclick="btn_loadrename()">LOADRENAME</button><br>
<button onclick="btn_chksum()">CHKSUM</button><br>
<button onclick="btn_rayload()">RAYLOAD</button><br>
<textarea style="width:80%" rows="3" id="ar2"></textarea> 
</body>
</html>










use v5.16;
#use feature 'say';
use warnings;use strict;
#$/ = "\015\012";
open(my ${ayn}, '<chr.txt') or die '';
#binmode(${ayn});
open(my ${out}, '>bin.dat') or die '';

my $str =  <$ayn>;

chomp $str;chomp $str;

 
 
if($str !~ /^[a-f0-9]{2,}$/){
  exit 1;
}


if(length($str) % 2 != 0){exit 2;}
my $tarlen = int(0.5 * length($str));
for(my $i=0;$i<$tarlen;$i++){
say hex(substr($str, $i*2,2 ));
print ${out} chr(hex(substr($str, $i*2,2 )));
}
undef($tarlen);
undef($str);
close(${ayn});undef(${ayn});
close(${out});undef(${out});
<STDIN>;


use v5.16;
#use feature 'say';
use warnings;use strict;

open(my $ayn, '<bin.dat') or die '';
open(my $out, '>chr.txt') or die '';
binmode($ayn);
my $one_byte;
READ:
{
local $/ = \1;
$one_byte = <$ayn>;
}
if(!defined($one_byte)){
goto DONE;
}
printf '%02x', ord($one_byte);
printf ${out} '%02x', ord($one_byte);
goto READ;
DONE:
close(${out});undef ${out};
close($ayn);undef $ayn;
<STDIN>;exit 0;






